services:
  nginx:
    image: nginx:alpine
    container_name: cimo_nginx
    ports:
      - "80:80"
      - "443-443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    networks:
      - dev

  db:
    image: postgres:17
    container_name: cimo_db
    env_file:
      - ./backend/.env.${MODE}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev

  redis:
    image: redis:7
    container_name: cimo_redis
    volumes:
      - redis_data:/data
    networks:
      - dev

  backend:
    build:
      context: ./backend
    container_name: cimo_backend
    env_file:
      - ./backend/.env.${MODE}
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    command: ["/backend/docker/app.sh", "app"]
    networks:
      - dev

  celery:
    build:
      context: ./backend
    container_name: cimo_celery
    env_file:
      - ./backend/.env.${MODE}
    depends_on:
      - redis
    command: ["/backend/docker/app.sh", "celery"]
    networks:
      - dev

  flower:
    build:
      context: ./backend
    container_name: cimo_flower
    env_file:
      - ./backend/.env.${MODE}
    ports:
      - "5555:5555"
    depends_on:
      - redis
    command: ["/backend/docker/app.sh", "flower"]
    networks:
      - dev

  beat:
    build:
      context: ./backend
    container_name: cimo_beat
    env_file:
      - ./backend/.env.${MODE}
    depends_on:
      - db
      - redis
    command: ["/backend/docker/app.sh", "beat"]
    networks:
      - dev

  load-data:
    build:
      context: ./backend
    container_name: cimo_load_data
    command: ["/backend/docker/load.sh"]
    env_file:
      - ./backend/.env.${MODE}
    depends_on:
      - db
    volumes:
      - ./backend/app/data:/app/data
    profiles:
      - manual
    networks:
      - dev

  frontend:
    build:
      context: ./frontend
      args:
        MODE: ${MODE}
    container_name: cimo_frontend
    ports:
      - "5173:5173"
    stdin_open: true
    tty: true
    env_file:
      - ./frontend/.env.${MODE}
    networks:
      - dev

  certbot:
    image: certbot/certbot
    container_name: cimo_certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email your@email.com --agree-tos --no-eff-email -d cimo-online.ru -d www.cimo-online.ru -d api.cimo-online.ru -d www.api.cimo-online.ru
    networks:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  dev:
